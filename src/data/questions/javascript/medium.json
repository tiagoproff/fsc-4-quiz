[
  {
    "id": 1,
    "category": 1,
    "level": 2,
    "question": "O que será impresso?",
    "code": "console.log(typeof NaN === 'number');",
    "options": ["true", "false", "undefined", "TypeError"],
    "answer": "true",
    "explanation": "No JavaScript, NaN é do tipo 'number'.",
    "tip": "Não confunda NaN com outro tipo."
  },
  {
    "id": 2,
    "category": 1,
    "level": 2,
    "question": "O que será impresso?",
    "code": "console.log(0.1 + 0.2 === 0.3);",
    "options": ["true", "false", "undefined", "NaN"],
    "answer": "false",
    "explanation": "Devido a problemas de precisão com ponto flutuante, 0.1 + 0.2 não é exatamente 0.3.",
    "tip": "Cuidado com números decimais no JS."
  },
  {
    "id": 3,
    "category": 1,
    "level": 2,
    "question": "Qual será o valor?",
    "code": "let a = [1,2,3];\nlet b = a;\nb.push(4);\nconsole.log(a);",
    "options": ["[1,2,3]", "[1,2,3,4]", "[4]", "Error"],
    "answer": "[1,2,3,4]",
    "explanation": "Arrays são passados por referência, então modificar b altera a também.",
    "tip": "Alterações em referência afetam o original."
  },
  {
    "id": 4,
    "category": 1,
    "level": 2,
    "question": "O que será impresso?",
    "code": "let x = 1;\nlet y = x++ + ++x;\nconsole.log(y);",
    "options": ["3", "4", "5", "2"],
    "answer": "4",
    "explanation": "x++ retorna 1 e incrementa depois; ++x incrementa primeiro (x=3) e retorna 3 → 1+3=4",
    "tip": "Preste atenção na diferença entre x++ e ++x."
  },
  {
    "id": 5,
    "category": 1,
    "level": 2,
    "question": "O que será impresso?",
    "code": "console.log([] == []);",
    "options": ["true", "false", "undefined", "TypeError"],
    "answer": "false",
    "explanation": "Arrays diferentes são objetos diferentes, então não são iguais com '=='.",
    "tip": "Comparação entre objetos compara referência, não conteúdo."
  },
  {
    "id": 6,
    "category": 1,
    "level": 2,
    "question": "Qual será o valor?",
    "code": "console.log([1,2] == '1,2');",
    "options": ["true", "false", "undefined", "TypeError"],
    "answer": "true",
    "explanation": "Array [1,2] é convertido para string '1,2' na comparação '=='.",
    "tip": "Array é convertido para string em comparação não estrita."
  },
  {
    "id": 7,
    "category": 1,
    "level": 2,
    "question": "O que será impresso?",
    "code": "console.log([] + {});",
    "options": ["'[object Object]'", "'[object Object]'", "NaN", "Error"],
    "answer": "'[object Object]'",
    "explanation": "Array vazio vira '', objeto {} vira '[object Object]', concatenando → '[object Object]'.",
    "tip": "Concatenação Array + Object vira string."
  },
  {
    "id": 8,
    "category": 1,
    "level": 2,
    "question": "Qual será o resultado?",
    "code": "console.log({} + []);",
    "options": ["0", "'[object Object]'", "NaN", "Error"],
    "answer": "'[object Object]'",
    "explanation": "Objeto {} é convertido para string '[object Object]', array [] vira '', resultando em '[object Object]'.",
    "tip": "A ordem do '+' importa."
  },
  {
    "id": 9,
    "category": 1,
    "level": 2,
    "question": "Qual será o resultado?",
    "code": "console.log('5' - '2' + '3');",
    "options": ["6", "'33'", "'53'", "NaN"],
    "answer": "'33'",
    "explanation": "'5'-'2' = 3 (número), 3 + '3' = '33' (concatenação string).",
    "tip": "Soma com string converte o número em string."
  },
  {
    "id": 10,
    "category": 1,
    "level": 2,
    "question": "O que será impresso?",
    "code": "console.log(1 < 2 < 3);",
    "options": ["true", "false", "undefined", "TypeError"],
    "answer": "true",
    "explanation": "1<2 é true (1), true<3 → true coerido para 1 → 1<3 = true.",
    "tip": "Lembre-se da coerção de boolean para number."
  },
  {
    "id": 11,
    "category": 1,
    "level": 2,
    "question": "O que será impresso?",
    "code": "console.log(3 > 2 > 1);",
    "options": ["true", "false", "undefined", "TypeError"],
    "answer": "false",
    "explanation": "3>2 é true (1), 1>1 é false.",
    "tip": "A ordem das comparações muda o resultado."
  },
  {
    "id": 12,
    "category": 1,
    "level": 2,
    "question": "Qual será o resultado?",
    "code": "let a = 0;\nconsole.log(a++ + ++a);",
    "options": ["1", "2", "3", "4"],
    "answer": "2",
    "explanation": "a++ retorna 0, ++a incrementa para 2 → 0+2=2.",
    "tip": "Preste atenção na ordem de incremento pós e pré."
  },
  {
    "id": 13,
    "category": 1,
    "level": 2,
    "question": "Qual será o valor?",
    "code": "console.log('true' == true);",
    "options": ["true", "false", "undefined", "TypeError"],
    "answer": "false",
    "explanation": "String 'true' não é coerida para boolean true, comparação retorna false.",
    "tip": "Comparação não estrita entre string e boolean."
  },
  {
    "id": 14,
    "category": 1,
    "level": 2,
    "question": "O que será impresso?",
    "code": "console.log([1,2] + 1);",
    "options": ["'1,21'", "'[1,2]1'", "3", "Error"],
    "answer": "'1,21'",
    "explanation": "Array [1,2] é convertido para '1,2', soma com 1 vira string '1,21'.",
    "tip": "Array + number vira string concatenada."
  },
  {
    "id": 15,
    "category": 1,
    "level": 2,
    "question": "O que será impresso?",
    "code": "console.log(typeof undefined);",
    "options": ["'undefined'", "'object'", "'null'", "'void'"],
    "answer": "'undefined'",
    "explanation": "O tipo de undefined é 'undefined'.",
    "tip": "Sempre retorna 'undefined'."
  },
  {
    "id": 16,
    "category": 1,
    "level": 2,
    "question": "Qual será o resultado?",
    "code": "console.log('5' * 2 + '3');",
    "options": ["'103'", "13", "'53'", "NaN"],
    "answer": "'103'",
    "explanation": "'5'*2=10, 10+'3' = '103' (concatenação com string).",
    "tip": "Multiplicação ocorre antes da concatenação."
  },
  {
    "id": 17,
    "category": 1,
    "level": 2,
    "question": "O que será impresso?",
    "code": "console.log(!!undefined);",
    "options": ["true", "false", "undefined", "TypeError"],
    "answer": "false",
    "explanation": "Undefined é falsy, !!undefined converte para boolean → false.",
    "tip": "Use !! para converter qualquer valor para boolean."
  },
  {
    "id": 18,
    "category": 1,
    "level": 2,
    "question": "Qual será o resultado?",
    "code": "console.log(null || 'default');",
    "options": ["null", "'default'", "undefined", "false"],
    "answer": "'default'",
    "explanation": "O operador || retorna o primeiro valor truthy, null é falsy → retorna 'default'.",
    "tip": "|| retorna o primeiro valor verdadeiro."
  },
  {
    "id": 19,
    "category": 1,
    "level": 2,
    "question": "O que será impresso?",
    "code": "console.log(null ?? 'default');",
    "options": ["null", "'default'", "undefined", "false"],
    "answer": "'default'",
    "explanation": "O operador ?? retorna o lado direito se o esquerdo for null ou undefined.",
    "tip": "Nullish coalescing (??) é diferente de ||."
  },
  {
    "id": 20,
    "category": 1,
    "level": 2,
    "question": "Qual será o valor?",
    "code": "let a = [1,2];\nlet b = a;\nb = [3,4];\nconsole.log(a);",
    "options": ["[1,2]", "[3,4]", "Error", "undefined"],
    "answer": "[1,2]",
    "explanation": "Reatribuição de b não altera a, que continua apontando para [1,2].",
    "tip": "Referência só muda quando você reatribui a variável."
  },
  {
    "id": 21,
    "category": 1,
    "level": 2,
    "question": "Qual valor será impresso?",
    "code": "console.log(+'123');",
    "options": ["123", "'123'", "NaN", "undefined"],
    "answer": "123",
    "explanation": "O operador unário + converte string numérica para número.",
    "tip": "O + na frente converte string em número."
  },
  {
    "id": 22,
    "category": 1,
    "level": 2,
    "question": "O que será impresso?",
    "code": "console.log([] == 0);",
    "options": ["true", "false", "undefined", "TypeError"],
    "answer": "true",
    "explanation": "[] é convertido para '' → coerido para 0, 0==0 → true.",
    "tip": "Array vazio coerido em número vira zero."
  },
  {
    "id": 23,
    "category": 1,
    "level": 2,
    "question": "Qual será o valor?",
    "code": "console.log({} == {});",
    "options": ["true", "false", "undefined", "TypeError"],
    "answer": "false",
    "explanation": "Objetos diferentes sempre são diferentes quando comparados por referência.",
    "tip": "Cada {} cria um objeto novo."
  },
  {
    "id": 24,
    "category": 1,
    "level": 2,
    "question": "O que será impresso?",
    "code": "console.log([,,].length);",
    "options": ["0", "2", "3", "undefined"],
    "answer": "2",
    "explanation": "Array com vírgulas vazias cria posições vazias, length = 2.",
    "tip": "Verifique quantas posições existem, não quantos valores definidos."
  },
  {
    "id": 25,
    "category": 1,
    "level": 2,
    "question": "O que será impresso?",
    "code": "console.log('hello'.charAt(0));",
    "options": ["'h'", "'hello'", "0", "undefined"],
    "answer": "'h'",
    "explanation": "charAt(0) retorna o caractere na posição 0.",
    "tip": "Índice começa em 0."
  },
  {
    "id": 26,
    "category": 1,
    "level": 2,
    "question": "O que será impresso?",
    "code": "console.log('hello'[0]);",
    "options": ["'h'", "'hello'", "0", "undefined"],
    "answer": "'h'",
    "explanation": "Strings podem ser acessadas como arrays.",
    "tip": "Uso de indexação em string."
  },
  {
    "id": 27,
    "category": 1,
    "level": 2,
    "question": "O que será impresso?",
    "code": "console.log('5' * []);",
    "options": ["0", "5", "NaN", "undefined"],
    "answer": "0",
    "explanation": "Array vazio é convertido para 0, '5'*0 = 0.",
    "tip": "Array vazio coerido para número."
  },
  {
    "id": 28,
    "category": 1,
    "level": 2,
    "question": "Qual será o resultado?",
    "code": "console.log('5' - []);",
    "options": ["5", "NaN", "0", "undefined"],
    "answer": "5",
    "explanation": "Array vazio vira 0, '5'-0 = 5.",
    "tip": "Array vazio coerido para 0 em operações aritméticas."
  },
  {
    "id": 29,
    "category": 1,
    "level": 2,
    "question": "O que será impresso?",
    "code": "console.log('5' - null);",
    "options": ["5", "NaN", "0", "undefined"],
    "answer": "5",
    "explanation": "null é coerido para 0, '5'-0=5.",
    "tip": "Cuidado com null em operações aritméticas."
  }
]
