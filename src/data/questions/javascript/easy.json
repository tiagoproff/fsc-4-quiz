[
  {
    "id": 1,
    "category": 1,
    "level": 1,
    "question": "O que será impresso no console?",
    "code": "let a = {};\nlet b = { key: 'b' };\nlet c = { key: 'c' };\na[b] = 123;\na[c] = 456;\nconsole.log(a[b]);",
    "options": ["123", "456", "undefined", "[object Object]"],
    "answer": "456",
    "explanation": "Em objetos, as chaves são convertidas para strings. Tanto b quanto c viram '[object Object]', então o último valor sobrescreve o anterior.",
    "tip": "Objetos não podem ter objetos como chave sem conversão."
  },
  {
    "id": 2,
    "category": 1,
    "level": 1,
    "question": "Qual é o valor de x após a execução?",
    "code": "let x = 0;\nfor (var i = 0; i < 3; i++) {\n  setTimeout(() => { x = i; }, 0);\n}\nconsole.log(x);",
    "options": ["0", "1", "2", "3"],
    "answer": "3",
    "explanation": "O var é funcionalmente escopado, então o i final é 3 quando os setTimeouts são executados.",
    "tip": "Pense em quando o callback do setTimeout é realmente executado."
  },
  {
    "id": 3,
    "category": 1,
    "level": 1,
    "question": "Qual será o resultado?",
    "code": "console.log([] + []);",
    "options": ["[]", "", "0", "undefined"],
    "answer": "",
    "explanation": "Quando arrays vazios são somados, eles são convertidos para strings vazias, resultando em ''.",
    "tip": "Arrays são convertidos para strings quando usados com '+' no contexto de strings."
  },
  {
    "id": 4,
    "category": 1,
    "level": 1,
    "question": "Qual valor será impresso?",
    "code": "console.log('5' - 3);",
    "options": ["2", "'2'", "53", "undefined"],
    "answer": "2",
    "explanation": "O operador '-' força a conversão da string '5' para número.",
    "tip": "O operador '-' não concatena strings."
  },
  {
    "id": 5,
    "category": 1,
    "level": 1,
    "question": "Qual é o tipo retornado por typeof null?",
    "code": null,
    "options": ["'null'", "'object'", "'undefined'", "'boolean'"],
    "answer": "'object'",
    "explanation": "Historicamente, typeof null retorna 'object' por uma decisão antiga do JavaScript.",
    "tip": "É um erro famoso do JavaScript, mas continua assim."
  },
  {
    "id": 6,
    "category": 1,
    "level": 1,
    "question": "O que será impresso?",
    "code": "console.log(0 == false);",
    "options": ["true", "false", "undefined", "TypeError"],
    "answer": "true",
    "explanation": "O operador '==' realiza coerção de tipo, então 0 é considerado igual a false.",
    "tip": "Use '===' para comparar sem coerção."
  },
  {
    "id": 7,
    "category": 1,
    "level": 1,
    "question": "O que será impresso?",
    "code": "console.log(0 === false);",
    "options": ["true", "false", "undefined", "TypeError"],
    "answer": "false",
    "explanation": "'===' compara tipo e valor, então 0 (number) não é igual a false (boolean).",
    "tip": "Aqui não há coerção de tipos."
  },
  {
    "id": 8,
    "category": 1,
    "level": 1,
    "question": "Qual será o resultado?",
    "code": "console.log([] == false);",
    "options": ["true", "false", "undefined", "TypeError"],
    "answer": "true",
    "explanation": "Array vazio é convertido para string '', que é coerido para false no '=='.",
    "tip": "Arrays vazios podem se comportar de forma surpreendente com '=='."
  },
  {
    "id": 9,
    "category": 1,
    "level": 1,
    "question": "Qual valor será impresso?",
    "code": "console.log([1,2] + [3,4]);",
    "options": ["'1,23,4'", "[1,2,3,4]", "NaN", "Error"],
    "answer": "'1,23,4'",
    "explanation": "Arrays são convertidos para strings e concatenados, resultando em '1,23,4'.",
    "tip": "O operador '+' converte arrays para strings antes de concatenar."
  },
  {
    "id": 10,
    "category": 1,
    "level": 1,
    "question": "O que será impresso?",
    "code": "console.log(null == undefined);",
    "options": ["true", "false", "TypeError", "undefined"],
    "answer": "true",
    "explanation": "No JavaScript, null e undefined são considerados iguais com '==', mas não com '==='.",
    "tip": "Eles são iguais somente com o operador '=='."
  },
  {
    "id": 11,
    "category": 1,
    "level": 1,
    "question": "Qual valor será impresso?",
    "code": "console.log(true + true);",
    "options": ["2", "truetrue", "false", "NaN"],
    "answer": "2",
    "explanation": "Boolean true é convertido para 1 em operações aritméticas.",
    "tip": "True vale 1 e false vale 0 em operações matemáticas."
  },
  {
    "id": 12,
    "category": 1,
    "level": 1,
    "question": "Qual será o resultado?",
    "code": "console.log('5' * '2');",
    "options": ["10", "'10'", "NaN", "52"],
    "answer": "10",
    "explanation": "O operador '*' força a conversão das strings para números.",
    "tip": "Diferente do '+', '*' converte strings para números."
  },
  {
    "id": 13,
    "category": 1,
    "level": 1,
    "question": "O que será impresso?",
    "code": "console.log('5' - '2');",
    "options": ["3", "'3'", "NaN", "52"],
    "answer": "3",
    "explanation": "O operador '-' converte strings numéricas para números.",
    "tip": "Não confunda com '+', que concatena strings."
  },
  {
    "id": 14,
    "category": 1,
    "level": 1,
    "question": "Qual será o resultado?",
    "code": "console.log('5' + '2');",
    "options": ["7", "'52'", "NaN", "undefined"],
    "answer": "'52'",
    "explanation": "O operador '+' concatena strings quando ambos os operandos são strings.",
    "tip": "Aqui não ocorre conversão para número."
  },
  {
    "id": 15,
    "category": 1,
    "level": 1,
    "question": "O que será impresso?",
    "code": "console.log(!!'false');",
    "options": ["true", "false", "undefined", "TypeError"],
    "answer": "true",
    "explanation": "Qualquer string não vazia é considerada true quando convertida para boolean.",
    "tip": "Mesmo a string 'false' é truthy."
  },
  {
    "id": 16,
    "category": 1,
    "level": 1,
    "question": "Qual será o resultado?",
    "code": "console.log([] == ![]);",
    "options": ["true", "false", "undefined", "TypeError"],
    "answer": "true",
    "explanation": "O array vazio é coerido para false, então [] == ![] → [] == true → false → true devido à coerção.",
    "tip": "Pegadinha clássica de coerção com array vazio e negação."
  },
  {
    "id": 17,
    "category": 1,
    "level": 1,
    "question": "O que será impresso?",
    "code": "console.log([1] == 1);",
    "options": ["true", "false", "undefined", "TypeError"],
    "answer": "true",
    "explanation": "Array [1] é convertido para string '1', que é coerido para número 1.",
    "tip": "Arrays podem ser convertidos para números em comparações não estritas."
  },
  {
    "id": 18,
    "category": 1,
    "level": 1,
    "question": "Qual será o resultado?",
    "code": "console.log(typeof NaN);",
    "options": ["'number'", "'NaN'", "'undefined'", "'object'"],
    "answer": "'number'",
    "explanation": "No JavaScript, NaN é considerado do tipo 'number'.",
    "tip": "É uma peculiaridade famosa do JS."
  },
  {
    "id": 19,
    "category": 1,
    "level": 1,
    "question": "O que será impresso?",
    "code": "console.log([] + {});",
    "options": ["'[object Object]'", "'{}'", "NaN", "[]"],
    "answer": "'[object Object]'",
    "explanation": "O array vazio é convertido para string '', o objeto {} para '[object Object]', resultando em '[object Object]'.",
    "tip": "Concatenação de array e objeto sempre vira string."
  },
  {
    "id": 20,
    "category": 1,
    "level": 1,
    "question": "Qual valor será impresso?",
    "code": "console.log({} + []);",
    "options": ["0", "'[object Object]'", "NaN", "'[object Object]'"],
    "answer": "'[object Object]'",
    "explanation": "O objeto é convertido para string '[object Object]' e o array para '', resultando em '[object Object]'.",
    "tip": "Ordem importa: objeto antes do array."
  },
  {
    "id": 21,
    "category": 1,
    "level": 1,
    "question": "Qual será o resultado?",
    "code": "console.log([] + false);",
    "options": ["false", "''", "'false'", "0"],
    "answer": "'false'",
    "explanation": "O array vazio vira '', concatenado com 'false' vira string 'false'.",
    "tip": "Concatenação entre string vazia e boolean."
  },
  {
    "id": 22,
    "category": 1,
    "level": 1,
    "question": "O que será impresso?",
    "code": "console.log([] + null);",
    "options": ["null", "''", "'null'", "0"],
    "answer": "'null'",
    "explanation": "Array vazio vira '', concatenado com null vira string 'null'.",
    "tip": "Concatenação array + null vira string."
  },
  {
    "id": 23,
    "category": 1,
    "level": 1,
    "question": "Qual valor será impresso?",
    "code": "console.log([1,2] + [3,4]);",
    "options": ["'1,23,4'", "[1,2,3,4]", "NaN", "Error"],
    "answer": "'1,23,4'",
    "explanation": "Arrays são convertidos para strings e concatenados.",
    "tip": "Array + Array vira string concatenada."
  },
  {
    "id": 24,
    "category": 1,
    "level": 1,
    "question": "O que será impresso?",
    "code": "console.log('' == false);",
    "options": ["true", "false", "undefined", "TypeError"],
    "answer": "true",
    "explanation": "String vazia é coerida para false no operador '=='.",
    "tip": "== força coerção de tipo."
  },
  {
    "id": 25,
    "category": 1,
    "level": 1,
    "question": "Qual será o resultado?",
    "code": "console.log('0' == false);",
    "options": ["true", "false", "undefined", "TypeError"],
    "answer": "true",
    "explanation": "'0' é convertido para número 0, que é igual a false.",
    "tip": "Pegadinha de string com boolean."
  },
  {
    "id": 26,
    "category": 1,
    "level": 1,
    "question": "O que será impresso?",
    "code": "console.log('' === false);",
    "options": ["true", "false", "undefined", "TypeError"],
    "answer": "false",
    "explanation": "'===' compara tipo e valor, e '' é string, false é boolean.",
    "tip": "Sem coerção aqui."
  },
  {
    "id": 27,
    "category": 1,
    "level": 1,
    "question": "Qual será o valor?",
    "code": "console.log(typeof []);",
    "options": ["'array'", "'object'", "'undefined'", "'list'"],
    "answer": "'object'",
    "explanation": "Arrays são objetos em JavaScript.",
    "tip": "Array é um tipo especial de objeto."
  },
  {
    "id": 28,
    "category": 1,
    "level": 1,
    "question": "O que será impresso?",
    "code": "console.log(typeof function(){});",
    "options": ["'function'", "'object'", "'undefined'", "'class'"],
    "answer": "'function'",
    "explanation": "Funções têm tipo 'function' em JavaScript.",
    "tip": "Funções são objetos especiais."
  },
  {
    "id": 29,
    "category": 1,
    "level": 1,
    "question": "Qual será o resultado?",
    "code": "console.log(1 + '1' - 0);",
    "options": ["2", "11", "10", "NaN"],
    "answer": "11",
    "explanation": "'1' + '1' = '11', depois -0 não altera a string, então vira número coerido 11.",
    "tip": "Soma + string concatenada e depois operação aritmética."
  },
  {
    "id": 30,
    "category": 1,
    "level": 1,
    "question": "O que será impresso?",
    "code": "console.log('b' + 'a' + + 'a' + 'a');",
    "options": ["'bana'", "'baNaNa'", "'bNaNa'", "'banaNa'"],
    "answer": "'bNaNa'",
    "explanation": "O '+ 'a'' gera NaN, então concatenando fica 'b'+'a'+NaN+'a' = 'bNaNa'.",
    "tip": "Pegadinha clássica do JS envolvendo NaN."
  },
  {
    "id": 31,
    "category": 1,
    "level": 1,
    "question": "Qual será o resultado?",
    "code": "console.log('5' + 3);",
    "options": ["8", "'8'", "'53'", "NaN"],
    "answer": "'53'",
    "explanation": "O operador '+' concatena strings, então '5' + 3 = '53'.",
    "tip": "O '+' é especial: concatena strings se pelo menos um dos operandos for string."
  }
]
